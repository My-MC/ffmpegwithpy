[tool.poetry]
name = "ffmpegwithpy"
version = "0.1.0"
description = "Python FFmpeg wrapper."
authors = ["My <84212641+My-MC@users.noreply.github.com>"]
license = "MIT"
homepage = "https://github.com/My-MC/ffmpegwithpy"

[tool.poetry.dependencies]
python = "^3.7"
pydantic = "1.10.2"

[tool.poetry.group.dev.dependencies]
pytest = "7.0.1"
black = "22.3.0"
isort = "5.10.1"
taskipy = "1.10.2"
mypy = "0.961"
ruff = "0.0.126"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
exclude = '''
(
    migrations
    | .mypy_cache
    | .pytest_cache
    | .ruff_cache
    | .venv
    | dist
)
'''

[tool.ruff]
line-length = 119

select = ["F", "E", "W", "I"]

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".pytest_cache",
    ".venv",
    "dist",
]

[tool.mypy]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.taskipy.tasks]
fmt-black = "black feature ffmpegwithpy tests"
fmt-isort = "isort ffmpegwithpy tests"
fmt = "task fmt-black && task fmt-isort"

lint-mypy = "mypy ffmpegwithpy"
lint-ruff = "ruff ffmpegwithpy"
lint = "task lint-mypy && task lint-ruff"
